---
services:
  prometheus:
    image: prom/prometheus:v3.0.1
    container_name: prometheus
    user: "1000"
    environment:
      - TZ=Europe/Dublin
    command:
      - '--web.enable-remote-write-receiver'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=7d'
    volumes:
      - ./prometheus/:/etc/prometheus
      - ./prom_data/:/prometheus
    ports:
      - 9090:9090
    restart: unless-stopped
    networks:
       - proxy
  
  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node-exporter
    networks:
      - proxy
    ports:
      - 9100:9100
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($|/)"


networks:
  proxy:
    name: proxy
    external: true

#This configuration file is used to define the services that will be running in the Prometheus stack.
#The services are defined in the services section, where each service is defined by a name and a set of configuration options.
#This stack would be used to monitor the health of the services running in the stack.
#copy the content of the file and paste it in the compose.yaml file in the prometheus directory.
#run the command docker-compose up -d to start the services.
#The services will be started in the background and can be accessed using the browser by visiting the URL http://localhost:9090.
#The Prometheus service will be running on port 9090 and the Node Exporter service will be running on port 9100.
#The Prometheus service will be used to monitor the health of the services running in the stack, while the Node Exporter service will be used to collect metrics from the host machine.